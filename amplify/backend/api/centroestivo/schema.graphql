type Group @model @auth(rules: [{allow: groups, provider: userPools, groups: ["Admins"], operations: [create, update, delete, read]}, {allow: groups, provider: userPools, groups: ["Refs"], operations: [create, update, read]}, {allow: groups, provider: userPools, groups: ["Users"], operations: [read]}, {allow: public, provider: iam, operations: [read]}]) {
  id: ID!
  name: String!
  color: String!
  age: Int!
  fantaTeams: [FantaTeam] @manyToMany(relationName: "FantaTeamGroups")
}

type FantaTeam @model @auth(rules: [{allow: groups, provider: userPools, groups: ["Admins"], operations: [create, update, delete, read]}, {allow: groups, provider: userPools, groups: ["Refs"], operations: [create, update, read]}, {allow: groups, provider: userPools, groups: ["Users"], operations: [read]}, {allow: public, provider: iam, operations: [read]}]) {
  id: ID!
  name: String!
  groups: [Group] @manyToMany(relationName: "FantaTeamGroups")
  leaderGroup: Group @hasOne
}

type FantaRule @model @auth(rules: [{allow: groups, provider: userPools, groups: ["Admins"], operations: [create, update, delete, read]}, {allow: groups, provider: userPools, groups: ["Refs"], operations: [create, update, read]}, {allow: groups, provider: userPools, groups: ["Users"], operations: [read]}, {allow: public, provider: iam, operations: [read]}]) {
  id: ID!
  title: String!
  description: String!
  points: Int!
  pointDescription: String!
}

type FantaScoreEntry @model @auth(rules: [{allow: groups, provider: userPools, groups: ["Admins"], operations: [create, update, delete, read]}, {allow: groups, provider: userPools, groups: ["Refs"], operations: [create, update, read]}, {allow: groups, provider: userPools, groups: ["Users"], operations: [read]}, {allow: public, provider: iam, operations: [read]}]) {
  id: ID!
  rule: FantaRule! @hasOne
  group: Group! @hasOne
  date: AWSDate!
} 